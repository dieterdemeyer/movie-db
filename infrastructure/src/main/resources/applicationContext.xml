<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    					http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

	<context:component-scan base-package="be.dieterdemeyer.moviedb" scope-resolver="be.dieterdemeyer.moviedb.presentation.resolver.CdiScopeMetadataResolver" />

	<!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/MovieDBDS" />
	</bean>-->

    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:hsql://localhost/moviedb_web" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>-->

    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/MovieDBDS" lookup-on-startup="true" cache="true" proxy-interface="javax.sql.DataSource" />

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="MovieDB" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="dataSource" ref="dataSource" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect" />
				<entry key="hibernate.show_sql" value="false" />
				<entry key="hibernate.format_sql" value="false" />
				<entry key="hibernate.jdbc.batch_size" value="0" />
			</map>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
  	
  	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
  		<constructor-arg ref="transactionManager" />
  	</bean>
  	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<constructor-arg ref="entityManagerFactory" />
	</bean>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* (@org.springframework.stereotype.Service be.dieterdemeyer.moviedb.application.*Service).*(..))" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
	
</beans>